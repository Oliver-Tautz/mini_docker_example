name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  create_issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag mini-docker-example:latest
      
  # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # Tag the Docker image
    - name: Tag the Docker image
      #run: docker tag mini-docker-example:latest ghcr.io/${{ github.repository_owner }}/mini-docker-example:latest
      run: docker tag mini-docker-example:latest ghcr.io/oliver-tautz/mini-docker-example:latest

    # Push the Docker image to GitHub Container Registry
    - name: Push the Docker image
      #run: docker push ghcr.io/${{ github.repository_owner }}/mini-docker-example:latest
      run: docker push ghcr.io/oliver-tautz/mini-docker-example:latest
